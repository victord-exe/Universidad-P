CREATE OR REPLACE PROCEDURE INSERTARTIPOTELEFONO (
    P_TIPO_TELEFONO IN TIPO_TELEFONO.TIPO_TELEFONO%TYPE,
    P_TIPO_TELEFONO_ID IN TIPO_TELEFONO.TIPO_TELEFONO_ID%TYPE
) AS
BEGIN
    INSERT INTO TIPO_TELEFONO (
        TIPO_TELEFONO_ID,
        TIPO_TELEFONO
    ) VALUES (
        P_TIPO_TELEFONO_ID,
        P_TIPO_TELEFONO
    );
    COMMIT;
END INSERTARTIPOTELEFONO;
/

CREATE OR REPLACE PROCEDURE INSERTARTIPOCORREO (
    P_TIPO_CORREO IN TIPO_EMAIL.TIPO_EMAIL%TYPE,
    P_TIPO_CORREO_ID IN TIPO_EMAIL.TIPO_EMAIL_ID%TYPE
) AS
BEGIN
    INSERT INTO TIPO_EMAIL (
        TIPO_EMAIL_ID,
        TIPO_EMAIL
    ) VALUES (
        P_TIPO_CORREO_ID,
        P_TIPO_CORREO
    );
    COMMIT;
END INSERTARTIPOCORREO;
/

CREATE OR REPLACE PROCEDURE INSERTARPROFESION (
    P_NOMBRE_PROFESION IN PROFESION.PROFESION%TYPE,
    P_CLIENTE IN CLIENTE.CLIENTE_ID%TYPE
) AS
BEGIN
    INSERT INTO PROFESION (
        PROFESION_ID,
        PROFESION,
        CLIENTE
    ) VALUES (
        PROFESION_ID_SEQ.NEXTVAL,
        P_NOMBRE_PROFESION,
        P_CLIENTE
    );
    COMMIT;
END INSERTARPROFESION;
/

CREATE OR REPLACE PROCEDURE INSERTARSUCURSAL (
    P_COD_SUCURSAL IN SUCURSAL.COD_SUCURSAL%TYPE,
    P_NOMBRE_SUCURSAL IN SUCURSAL.NOMBRE_SUCURSAL%TYPE,
    P_MONTOPRESTAMO IN SUCURSAL.MONTOPRESTAMO%TYPE
) AS
BEGIN
    INSERT INTO SUCURSAL (
        COD_SUCURSAL,
        NOMBRE_SUCURSAL,
        MONTOPRESTAMO
    ) VALUES (
        P_COD_SUCURSAL,
        P_NOMBRE_SUCURSAL,
        P_MONTOPRESTAMO
    );
    COMMIT;
END INSERTARSUCURSAL;
/

CREATE OR REPLACE PROCEDURE INSERTARTIPOPRESTAMO (
    P_TIPO_PRESTAMO IN TIPO_PRESTAMO.TIPO_PRESTAMO%TYPE,
    P_TIPO_PRESTAMO_ID IN TIPO_PRESTAMO.TIPO_PRESTAMO_ID%TYPE
) AS
BEGIN
    INSERT INTO TIPO_PRESTAMO (
        TIPO_PRESTAMO_ID,
        TIPO_PRESTAMO
    ) VALUES (
        P_TIPO_PRESTAMO_ID,
        P_TIPO_PRESTAMO
    );
    COMMIT;
END INSERTARTIPOPRESTAMO;
/

CREATE OR REPLACE FUNCTION CALCULAREDAD(
    P_FECHA_NACIMIENTO CLIENTE.FECHA_NACIMIENTO%TYPE
) RETURN NUMBER IS
    V_EDAD CLIENTE.EDAD%TYPE;
BEGIN
    V_EDAD := FLOOR(MONTHS_BETWEEN(SYSDATE, P_FECHA_NACIMIENTO) / 12);
    RETURN V_EDAD;
END CALCULAREDAD;
/

CREATE OR REPLACE PROCEDURE INSERTARCLIENTE(
    P_CEDULA IN CLIENTE.CEDULA%TYPE,
    P_NOMBRE IN CLIENTE.NOMBRE%TYPE,
    P_APELLIDO IN CLIENTE.APELLIDO%TYPE,
    P_SEXO IN CLIENTE.SEXO%TYPE,
    P_FECHA_NACIMIENTO IN CLIENTE.FECHA_NACIMIENTO%TYPE,
    P_EMAIL IN EMAIL.EMAIL%TYPE,
    P_TIPO_CORREO IN TIPO_EMAIL.TIPO_EMAIL%TYPE,
    P_TELEFONO IN TELEFONO.TELEFONO%TYPE,
    P_TIPO_TELEFONO IN TIPO_TELEFONO.TIPO_TELEFONO%TYPE,
    P_PROFESION IN PROFESION.PROFESION%TYPE,
    P_SUCURSAL IN SUCURSAL.NOMBRE_SUCURSAL%TYPE
) AS
    V_TIPO_CORREO   TIPO_EMAIL.TIPO_EMAIL_ID%TYPE;
    V_TIPO_TELEFONO TIPO_TELEFONO.TIPO_TELEFONO_ID%TYPE;
    V_CLIENTE_ID    CLIENTE.CLIENTE_ID%TYPE;
    V_EDAD          CLIENTE.EDAD%TYPE;
    V_SUCURSAL      SUCURSAL.COD_SUCURSAL%TYPE;
BEGIN
    SELECT
        COD_SUCURSAL INTO V_SUCURSAL
    FROM
        SUCURSAL
    WHERE
        NOMBRE_SUCURSAL = P_SUCURSAL;
    SELECT
        TIPO_TELEFONO_ID INTO V_TIPO_TELEFONO
    FROM
        TIPO_TELEFONO
    WHERE
        TIPO_TELEFONO = P_TIPO_TELEFONO;
    SELECT
        TIPO_EMAIL_ID INTO V_TIPO_CORREO
    FROM
        TIPO_EMAIL
    WHERE
        TIPO_EMAIL = P_TIPO_CORREO;
    V_EDAD := CALCULAREDAD(P_FECHA_NACIMIENTO);
    INSERT INTO CLIENTE (
        CLIENTE_ID,
        CEDULA,
        NOMBRE,
        APELLIDO,
        SEXO,
        FECHA_NACIMIENTO,
        EDAD,
        SUCURSAL
    ) VALUES (
        CLIENTE_ID_SEQ.NEXTVAL,
        P_CEDULA,
        P_NOMBRE,
        P_APELLIDO,
        P_SEXO,
        P_FECHA_NACIMIENTO,
        V_EDAD,
        V_SUCURSAL
    );
    SELECT
        CLIENTE_ID INTO V_CLIENTE_ID
    FROM
        CLIENTE
    WHERE
        CEDULA = P_CEDULA;
    INSERTARPROFESION(P_PROFESION, V_CLIENTE_ID);
    INSERT INTO EMAIL (
        EMAIL,
        CLIENTE,
        TIPO_EMAIL
    ) VALUES (
        P_EMAIL,
        V_CLIENTE_ID,
        V_TIPO_CORREO
    );
    INSERT INTO TELEFONO (
        TELEFONO,
        CLIENTE,
        TIPO_TELEFONO
    ) VALUES (
        P_TELEFONO,
        V_CLIENTE_ID,
        V_TIPO_TELEFONO
    );
    COMMIT;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
 -- cuando no se encuentra el valor en la tabla
        DBMS_OUTPUT.PUT_LINE('Valor no encontrado.');
    WHEN OTHERS THEN
 -- otras excepciones
        DBMS_OUTPUT.PUT_LINE('Ocurrió un error en la inserción.');
 -- para mantener la integridad de los datos
        ROLLBACK;
END INSERTARCLIENTE;
/

CREATE OR REPLACE PROCEDURE INSERTARPRESTAMO(
    P_CLIENTE_CEDULA IN CLIENTE.CEDULA%TYPE,
    P_TIPO_PRESTAMO IN TIPO_PRESTAMO.TIPO_PRESTAMO%TYPE,
    P_FECHA_APROBADO IN PRESTAMO.FECHA_APROBADO%TYPE,
    P_MONTO_APROBADO IN PRESTAMO.MONTO_APROBADO%TYPE,
    P_TASA_INTERES IN PRESTAMO.TASA_INTERES%TYPE,
    P_LETRA_MENSUAL IN PRESTAMO.LETRA_MENSUAL%TYPE,
    P_FECHA_PAGO IN PRESTAMO.FECHA_PAGO%TYPE,
    P_NOMBRE_SUCURSAL IN SUCURSAL.NOMBRE_SUCURSAL%TYPE,
    P_USUARIO IN PRESTAMO.USUARIO%TYPE
) AS
    V_CLIENTE_ID    CLIENTE.CLIENTE_ID%TYPE;
    V_SUCURSAL      SUCURSAL.COD_SUCURSAL%TYPE;
    V_TIPO_PRESTAMO TIPO_PRESTAMO.TIPO_PRESTAMO_ID%TYPE;
BEGIN
    SELECT
        CLIENTE_ID INTO V_CLIENTE_ID
    FROM
        CLIENTE
    WHERE
        CEDULA = P_CLIENTE_CEDULA;
    SELECT
        COD_SUCURSAL INTO V_SUCURSAL
    FROM
        SUCURSAL
    WHERE
        NOMBRE_SUCURSAL = P_NOMBRE_SUCURSAL;
    SELECT
        TIPO_PRESTAMO_ID INTO V_TIPO_PRESTAMO
    FROM
        TIPO_PRESTAMO
    WHERE
        TIPO_PRESTAMO = P_TIPO_PRESTAMO;
    INSERT INTO PRESTAMO (
        NUMERO_PRESTAMO,
        CLIENTE,
        TIPO_PRESTAMO,
        FECHA_APROBADO,
        MONTO_APROBADO,
        TASA_INTERES,
        LETRA_MENSUAL,
        MONTO_PAGADO,
        FECHA_PAGO,
        SUCURSAL,
        SALDO_ACTUAL,
        INTERES_PAGADO,
        USUARIO
    ) VALUES (
        PRESTAMO_ID_SEQ.NEXTVAL,
        V_CLIENTE_ID,
        V_TIPO_PRESTAMO,
        P_FECHA_APROBADO,
        P_MONTO_APROBADO,
        P_TASA_INTERES,
        P_LETRA_MENSUAL,
        0,
        P_FECHA_PAGO,
        V_SUCURSAL,
        P_MONTO_APROBADO,
        0,
        P_USUARIO
    );
    UPDATE SUCURSAL
    SET
        MONTOPRESTAMO = MONTOPRESTAMO - P_MONTO_APROBADO
    WHERE
        COD_SUCURSAL = P_NOMBRE_SUCURSAL;
    COMMIT;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
 -- cuando no se encuentra el valor en la tabla
        DBMS_OUTPUT.PUT_LINE('Valor no encontrado.');
    WHEN OTHERS THEN
 -- otras excepciones
        DBMS_OUTPUT.PUT_LINE('Ocurrió un error en la inserción.');
 -- para mantener la integridad de los datos
        ROLLBACK;
END;
/

CREATE OR REPLACE PROCEDURE INSERTARPAGOSRECIBIDOS(
    P_MONTO_PAGO IN TRANSACPAGOS.MONTO_PAGO%TYPE,
    P_USUARIO IN TRANSACPAGOS.USUARIO%TYPE,
    P_SUCURSAL IN SUCURSAL.NOMBRE_SUCURSAL%TYPE,
    P_CLIENTE_CEDULA IN CLIENTE.CEDULA%TYPE,
    P_PRESTAMO IN PRESTAMO.NUMERO_PRESTAMO%TYPE
) AS
    V_CLIENTE_ID CLIENTE.CLIENTE_ID%TYPE;
    V_SUCURSAL   SUCURSAL.COD_SUCURSAL%TYPE;
BEGIN
    SELECT
        CLIENTE_ID INTO V_CLIENTE_ID
    FROM
        CLIENTE
    WHERE
        CEDULA = P_CLIENTE_CEDULA;
    SELECT
        COD_SUCURSAL INTO V_SUCURSAL
    FROM
        SUCURSAL
    WHERE
        NOMBRE_SUCURSAL = P_SUCURSAL;
    INSERT INTO TRANSACPAGOS (
        TRANSACCION_ID,
        FECHA_TRANSACCION,
        MONTO_PAGO,
        ESTADO,
        FECHA_INSERCION,
        USUARIO,
        SUCURSAL,
        CLIENTE,
        PRESTAMO
    ) VALUES(
        TRANSACCION_ID_SEQ.NEXTVAL,
        SYSDATE,
        P_MONTO_PAGO,
        'E',
        SYSDATE,
        P_USUARIO,
        V_SUCURSAL,
        V_CLIENTE_ID,
        P_PRESTAMO
    );
EXCEPTION
    WHEN NO_DATA_FOUND THEN
 -- cuando no se encuentra el valor en la tabla
        DBMS_OUTPUT.PUT_LINE('Valor no encontrado.');
    WHEN OTHERS THEN
 -- otras excepciones
        DBMS_OUTPUT.PUT_LINE('Ocurrió un error en la inserción.');
        DBMS_OUTPUT.PUT_LINE('Ocurrió un error en la inserción.');
 -- para mantener la integridad de los datos
        ROLLBACK;
END INSERTARPAGOSRECIBIDOS;
/

CREATE OR REPLACE FUNCTION CALCULARINTERES(
    P_SALDO_PRESTAMO PRESTAMO.SALDO_ACTUAL%TYPE,
    P_TASA_INTERES PRESTAMO.TASA_INTERES%TYPE
) RETURN NUMBER IS
BEGIN
    RETURN P_SALDO_PRESTAMO * P_TASA_INTERES / 100;
END CALCULARINTERES;

CREATE OR REPLACE PROCEDURE ACTUALIZARPAGOSRECIBO AS
    CURSOR C_PAGOS IS
    SELECT
        TRANSACCION_ID,
        CLIENTE,
        PRESTAMO,
        MONTO_PAGO,
        SUCURSAL
    FROM
        TRANSACPAGOS;
    V_INTERES         PRESTAMO.INTERES_PAGADO%TYPE;
    V_MONTO_PENDIENTE PRESTAMO.SALDO_ACTUAL%TYPE;
    V_SALDO           PRESTAMO.SALDO_ACTUAL%TYPE;
BEGIN
    FOR R_PAGO IN C_PAGOS LOOP
        SELECT
            TASA_INTERES,
            SALDO_ACTUAL INTO V_INTERES,
            V_SALDO
        FROM
            PRESTAMO
        WHERE
            NUMERO_PRESTAMO = R_PAGO.PRESTAMO
            AND CLIENTE = R_PAGO.CLIENTE;
        V_INTERES := CALCULARINTERES(
            P_SALDO_PRESTAMO => V_SALDO,
            P_TASA_INTERES => V_INTERES
        );
        V_MONTO_PENDIENTE := R_PAGO.MONTO_PAGO - V_INTERES;
        IF V_MONTO_PENDIENTE > 0 THEN
            V_SALDO := V_MONTO_PENDIENTE;
            UPDATE PRESTAMO
            SET
                SALDO_ACTUAL = V_SALDO
            WHERE
                NUMERO_PRESTAMO = R_PAGO.PRESTAMO
                AND CLIENTE = R_PAGO.CLIENTE;
        END IF;
        UPDATE PRESTAMO
        SET
            INTERES_PAGADO = INTERES_PAGADO + V_INTERES
        WHERE
            NUMERO_PRESTAMO = R_PAGO.PRESTAMO
            AND CLIENTE = R_PAGO.CLIENTE;
        UPDATE SUCURSAL
        SET
            MONTOPRESTAMO = MONTOPRESTAMO + V_SALDO
        WHERE
            COD_SUCURSAL = R_PAGO.SUCURSAL;
    END LOOP;

    COMMIT;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
 -- cuando no se encuentra el valor en la tabla
        DBMS_OUTPUT.PUT_LINE('Valor no encontrado.');
    WHEN OTHERS THEN
 -- otras excepciones
        DBMS_OUTPUT.PUT_LINE('Ocurrió un error en la inserción.');
 -- para mantener la integridad de los datos
        ROLLBACK;
END ACTUALIZARPAGOSRECIBO;
/